---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";

// Assuming your collection is named 'timeline'
// and each entry's frontmatter has 'date', 'title'
const timelineEntries = await getCollection("timeline");

const timelineItems = timelineEntries.sort(
  (a, b) => new Date(a.data.date).getTime() - new Date(b.data.date).getTime()
);
const showTime = false; // Toggle to show or hide the timestamp
---

<Layout
  seo={{
    title: "Timeline",
    description: "A timeline of events for my CBH Homes experience",
  }}
>
  <ul
    class="timeline timeline-snap-icon max-md:timeline-compact timeline-vertical mx-auto"
  >
    {
      timelineEntries.map(async (entry, index) => {
        const { Content } = await entry.render();
        const displayDate = new Date(entry.data.date).toLocaleDateString(
          undefined,
          {
            year: "numeric",
            month: "long",
            day: "numeric",
            timeZone: "America/Denver",
          }
        );
        const displayTime = new Date(entry.data.date).toLocaleTimeString(
          undefined,
          { hour: "2-digit", minute: "2-digit", timeZone: "America/Denver" }
        );
        return (
          <li>
            {index > 0 && <hr />}
            <div class="timeline-middle">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 20 20"
                fill="currentColor"
                class="h-5 w-5"
              >
                <path
                  fill-rule="evenodd"
                  d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
                  clip-rule="evenodd"
                />
              </svg>
            </div>
            {/* Use index to alternate alignment */}
            {index % 2 === 0 ? (
              <div class="timeline-start mb-10 md:text-end">
                <time class="font-mono italic">
                  {displayDate}
                  {showTime && ` ${displayTime}`}
                </time>
                <div class="text-lg font-black">{entry.data.title}</div>
                <div class="prose md:text-left">
                  <Content />
                </div>
              </div>
            ) : (
              <div class="timeline-end md:mb-10">
                <time class="font-mono italic">
                  {displayDate}
                  {showTime && ` ${displayTime}`}
                </time>
                <div class="text-lg font-black">{entry.data.title}</div>
                <div class="prose md:text-left">
                  <Content />
                </div>
              </div>
            )}
            {index < timelineItems.length - 1 && <hr />}
          </li>
        );
      })
    }
  </ul>
  <div class="text-center">
   <div class="text-xl font-bold text-base-content">
      Work in progress... more details and updates coming soon!
    </div>
  </div>
</Layout>
